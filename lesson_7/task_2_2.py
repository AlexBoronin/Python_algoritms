# Задание 2.
# Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом. Найдите в массиве медиану.
# Медианой называется элемент ряда, делящий его на две равные по длине части:
# в одной находятся элементы, которые не меньше медианы, в другой – не больше медианы.
# Решите задачу:
# 2) без сортировки
# сделайте замеры на массивах длиной 10, 100, 1000 элементов
# В конце сделайте аналитику какой трех из способов оказался эффективнее
# сделайте замеры на массивах длиной 10, 100, 1000 элементов

from random import randint
from timeit import timeit


# 2) без сортировки

def not_sort(arr):
    k = (len(arr) - 1) / 2
    while k != 0:
        k -= 1
        arr.remove(max(arr))
    return f'Значение медианы без сортировки = {max(arr)}'


k = 10
my_arr = [randint(-100, 100) for i in range(2 * k + 1)]
print(my_arr)
print(not_sort(my_arr[:]))
print('k=10', '=' * 50)
print(timeit('not_sort(my_arr[:])', globals=globals(), number=1000))
print('k=100', '=' * 50)
my_arr = [randint(-100, 100) for i in range(101)]
print(timeit('not_sort(my_arr[:])', globals=globals(), number=1000))
print('k=1000', '=' * 50)
my_arr = [randint(-100, 100) for i in range(1001)]
print(timeit('not_sort(my_arr[:])', globals=globals(), number=1000))

'''
[-22, 92, -4, 4, 64, 60, -88, 36, -61, 92, 14, 46, 53, -46, -28, 100, 43, -11, -6, -5, 82]
Значение медианы без сортировки = 14
k=10 ==================================================
0.0035176000092178583
k=100 ==================================================
0.04733430000487715
k=1000 ==================================================
4.1236169000621885
'''


# !!!!быстрее всего работает встроенная функция из пакета "statistics" (см.task_2_3)