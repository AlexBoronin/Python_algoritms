# Задание 2.
# Массив размером 2m + 1, где m – натуральное число, заполнен случайным образом.
# Найдите в массиве медиану.
# Медианой называется элемент ряда, делящий его на две равные по длине части:
# в одной находятся элементы, которые не меньше медианы, в другой – не больше медианы.
# Решите задачу:
# 1) с помощью сортировки (Гномья, Шелла или Кучей)
#
# сделайте замеры на массивах длиной 10, 100, 1000 элементов
# В конце сделайте аналитику какой трех из способов оказался эффективнее
# сделайте замеры на массивах длиной 10, 100, 1000 элементов

from random import randint
from timeit import timeit


# 1) с помощью сортировки (Гномья)

def sort_gnome(arr):
    i, size = 1, len(arr)
    while i < size:
        if arr[i - 1] <= arr[i]:
            i += 1
        else:
            arr[i - 1], arr[i] = arr[i], arr[i - 1]
            if i > 1:
                i -= 1
    return arr


k = 10
my_arr = [randint(-100, 100) for i in range(2 * k + 1)]
print(my_arr)
print(sort_gnome(my_arr[:]))
print(f'Значение медианы по гному = {sort_gnome(my_arr[:])[k]}')
print('k=10', '=' * 50)
print(timeit('sort_gnome(my_arr[:])', globals=globals(), number=1000))
print('k=100', '=' * 50)
my_arr = [randint(-100, 100) for i in range(101)]
print(timeit('sort_gnome(my_arr[:])', globals=globals(), number=1000))
print('k=1000', '=' * 50)
my_arr = [randint(-100, 100) for i in range(1001)]
print(timeit('sort_gnome(my_arr[:])', globals=globals(), number=1000))

'''
[-10, -30, -83, 73, -30, 74, -96, -4, -91, -39, 82, 56, 79, 91, -52, -23, 89, 36, 85, -25, -80]
[-96, -91, -83, -80, -52, -39, -30, -30, -25, -23, -10, -4, 36, 56, 73, 74, 79, 82, 85, 89, 91]
Значение медианы по гному = -10
k=10 ==================================================
0.016569700092077255
k=100 ==================================================
0.3845634999452159
k=1000 ==================================================
50.03540010005236'''

# !!!!быстрее всего работает встроенная функция из пакета "statistics" (см.task_2_3)